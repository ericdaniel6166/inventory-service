app:
  application-name: inventory-service
  server-port: 8083
  #  server-port: 0
  eureka-hostname: localhost
  eureka-port: 8761
  database-hostname: localhost
  database-port: 5434
  database-name: inventory_service
  kafka-hostname: localhost
  kafka-port: 9092
  kafka-default-topic: notificationTopic
  kafka-concurrency: 3
  context-path: api/inventory
  api-gateway-hostname: localhost
  swagger-api-gateway-hostname: localhost
  api-gateway-server-port: 8181
  zipkin-hostname: localhost
  zipkin-server-port: 9411
  zipkin-context-path: api/v2/spans
  mqtt-hostname: localhost
  mqtt-port: 1883
  swagger-info-title: Inventory Service
  swagger-info-version: v1.0
  keycloak-host: localhost
  keycloak-port: 8090
  redis-host: localhost
  redis-port: 6379
  redis-time-to-live: 600000 #10 minutes #ms


eureka:
  client:
    serviceUrl:
      defaultZone: http://${app.eureka-hostname}:${app.eureka-port}/eureka
    registry-fetch-interval-seconds: 5
  instance:
    lease-renewal-interval-in-seconds: 5

security:
  enabled: true
  skip-urls:
    - /guest/**
    - /actuator/**
    - /swagger-ui/**
    - /v3/api-docs/**
    - /api-docs/**
    - /error/**

spring:
  application:
    name: ${app.application-name}
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://${app.keycloak-host}:${app.keycloak-port}/realms/spring-boot-microservices-realm
  flyway:
    baseline-on-migrate: true
    baseline-version: 0.0
    locations: classpath:db/migration/
    validate-on-migrate: true
    enabled: true
    table: schema_history
  datasource:
    url: jdbc:postgresql://${app.database-hostname}:${app.database-port}/${app.database-name}
    username: postgres
    password: secret
    driver-class-name: org.postgresql.Driver
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: none
    show-sql: true
  redis:
    enabled: true
  cache:
    redis:
      time-to-live: ${app.redis-time-to-live}
    type: redis
  data:
    redis:
      host: ${app.redis-host}
      port: ${app.redis-port}
  kafka:
    enabled: true
    bootstrap-servers: ${app.kafka-hostname}:${app.kafka-port}
    template:
      default-topic: ${app.kafka-default-topic}
    producers:
      order-item-not-available:
        topic-name: order-item-not-available
      order-processing:
        topic-name: order-processing
    consumers:
      order-pending:
        topic-name: order-pending
        group-id: order-pending-${app.application-name}
        properties:
          concurrency: ${app.kafka-concurrency}
  mqtt:
    inbound:
      enabled: true
      url: tcp://${app.mqtt-hostname}:${app.mqtt-port}
      topics:
        - topic1
        - topic2
      completion-timeout: 50000 #ms
      qos: 1 #Quality of Service (QoS) level

management:
  tracing:
    enabled: true
    propagation:
      type: b3
    sampling:
      probability: 1.0
  health:
    circuitbreakers:
      enabled: true
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
  zipkin:
    tracing:
      endpoint: http://${app.zipkin-hostname}:${app.zipkin-server-port}/${app.zipkin-context-path}

server:
  port: ${app.server-port}
  servlet:
    context-path: /${app.context-path}

logging:
  level:
    root: INFO
  pattern:
    level: "%5p[${spring.application.name:},%X{traceId:-},%X{spanId:-}]"

springdoc:
  swagger-ui:
    path: /swagger-ui.html
  api-docs:
    path: /api-docs

swagger:
  server:
    url: http://${app.swagger-api-gateway-hostname}:${app.api-gateway-server-port}/${app.context-path}
  info:
    title: ${app.swagger-info-title}
    version: ${app.swagger-info-version}
    description: Documentation ${app.swagger-info-title} ${app.swagger-info-version}
  security-scheme:
    name: bearerAuth
    bearer-format: JWT
    scheme: bearer
